/**
 * generated by http://RDFReactor.semweb4j.org ($Id: CodeGenerator.java 1765 2010-02-11 09:51:13Z max.at.xam.de $) JavaScript extension on 5/29/11 6:28 PM
 */

/**
 * This class manages access to these properties:
 * <ul>
 *   <li> AIMchatID </li>
 *   <li> Account </li>
 *   <li> Age </li>
 *   <li> Birthday </li>
 *   <li> Gender </li>
 *   <li> HoldsAccount </li>
 *   <li> ICQchatID </li>
 *   <li> Interest </li>
 *   <li> JabberID </li>
 *   <li> MSNchatID </li>
 *   <li> Made </li>
 *   <li> Openid </li>
 *   <li> Personalmailbox </li>
 *   <li> Sha1sumofapersonalmailboxURIname </li>
 *   <li> SkypeID </li>
 *   <li> Status </li>
 *   <li> Tipjar </li>
 *   <li> Topicinterest </li>
 *   <li> Weblog </li>
 *   <li> YahoochatID </li>
 *   <li> Comment </li>
 *   <li> Label </li>
 *   <li> Member </li>
 *   <li> Type </li>
 * </ul>
 */
Agent = function(rdf) {
    Thing.call(this, rdf);
   
    /** http://xmlns.com/foaf/0.1/Agent */

    /** http://xmlns.com/foaf/0.1/aimChatID */
    /** http://xmlns.com/foaf/0.1/account */
    /** http://xmlns.com/foaf/0.1/age */
    /** http://xmlns.com/foaf/0.1/birthday */
    /** http://xmlns.com/foaf/0.1/gender */
    /** http://xmlns.com/foaf/0.1/holdsAccount */
    /** http://xmlns.com/foaf/0.1/icqChatID */
    /** http://xmlns.com/foaf/0.1/interest */
    /** http://xmlns.com/foaf/0.1/jabberID */
    /** http://xmlns.com/foaf/0.1/msnChatID */
    /** http://xmlns.com/foaf/0.1/made */
    /** http://xmlns.com/foaf/0.1/openid */
    /** http://xmlns.com/foaf/0.1/mbox */
    /** http://xmlns.com/foaf/0.1/mbox_sha1sum */
    /** http://xmlns.com/foaf/0.1/skypeID */
    /** http://xmlns.com/foaf/0.1/status */
    /** http://xmlns.com/foaf/0.1/tipjar */
    /** http://xmlns.com/foaf/0.1/topic_interest */
    /** http://xmlns.com/foaf/0.1/weblog */
    /** http://xmlns.com/foaf/0.1/yahooChatID */
    /** http://www.w3.org/2000/01/rdf-schema#comment */
    /** http://www.w3.org/2000/01/rdf-schema#label */
    /** http://www.w3.org/2000/01/rdf-schema#member */
    /** http://www.w3.org/1999/02/22-rdf-syntax-ns#type */

    var queryObject = function(rdf, from, predicate, to) {
        return rdf.where(from + ' ' + predicate + ' ' + to);
    }
 
    var AIMchatID = new Array();
    queryObject(rdf, "?Agent", "foaf:AIMchatID", "?AIMchatID")
        .each(function() {
            AIMchatID.push(new String(rdf
                .where("AIMchatID a foaf:AIMchatID")
                .filter("authority", this.AIMchatID.value.authority))); 
        });
    this.AIMchatID = AIMchatID;
    
    var Account = new Array();
    queryObject(rdf, "?Agent", "foaf:Account", "?Account")
        .each(function() {
            Account.push(new OnlineAccount(rdf
                .where("Account a foaf:Account")
                .filter("authority", this.Account.value.authority))); 
        });
    this.Account = Account;
    
    var Age = new Array();
    queryObject(rdf, "?Agent", "foaf:Age", "?Age")
        .each(function() {
            Age.push(new String(rdf
                .where("Age a foaf:Age")
                .filter("authority", this.Age.value.authority))); 
        });
    this.Age = Age;
    
    var Birthday = new Array();
    queryObject(rdf, "?Agent", "foaf:Birthday", "?Birthday")
        .each(function() {
            Birthday.push(new String(rdf
                .where("Birthday a foaf:Birthday")
                .filter("authority", this.Birthday.value.authority))); 
        });
    this.Birthday = Birthday;
    
    var Gender = new Array();
    queryObject(rdf, "?Agent", "foaf:Gender", "?Gender")
        .each(function() {
            Gender.push(new String(rdf
                .where("Gender a foaf:Gender")
                .filter("authority", this.Gender.value.authority))); 
        });
    this.Gender = Gender;
    
    var HoldsAccount = new Array();
    queryObject(rdf, "?Agent", "foaf:HoldsAccount", "?HoldsAccount")
        .each(function() {
            HoldsAccount.push(new OnlineAccount(rdf
                .where("HoldsAccount a foaf:HoldsAccount")
                .filter("authority", this.HoldsAccount.value.authority))); 
        });
    this.HoldsAccount = HoldsAccount;
    
    var ICQchatID = new Array();
    queryObject(rdf, "?Agent", "foaf:ICQchatID", "?ICQchatID")
        .each(function() {
            ICQchatID.push(new String(rdf
                .where("ICQchatID a foaf:ICQchatID")
                .filter("authority", this.ICQchatID.value.authority))); 
        });
    this.ICQchatID = ICQchatID;
    
    var Interest = new Array();
    queryObject(rdf, "?Agent", "foaf:Interest", "?Interest")
        .each(function() {
            Interest.push(new Document(rdf
                .where("Interest a foaf:Interest")
                .filter("authority", this.Interest.value.authority))); 
        });
    this.Interest = Interest;
    
    var JabberID = new Array();
    queryObject(rdf, "?Agent", "foaf:JabberID", "?JabberID")
        .each(function() {
            JabberID.push(new String(rdf
                .where("JabberID a foaf:JabberID")
                .filter("authority", this.JabberID.value.authority))); 
        });
    this.JabberID = JabberID;
    
    var MSNchatID = new Array();
    queryObject(rdf, "?Agent", "foaf:MSNchatID", "?MSNchatID")
        .each(function() {
            MSNchatID.push(new String(rdf
                .where("MSNchatID a foaf:MSNchatID")
                .filter("authority", this.MSNchatID.value.authority))); 
        });
    this.MSNchatID = MSNchatID;
    
    var Made = new Array();
    queryObject(rdf, "?Agent", "foaf:Made", "?Made")
        .each(function() {
            Made.push(new org.ontoware.rdfreactor.schema.owl.Thing(rdf
                .where("Made a foaf:Made")
                .filter("authority", this.Made.value.authority))); 
        });
    this.Made = Made;
    
    var Openid = new Array();
    queryObject(rdf, "?Agent", "foaf:Openid", "?Openid")
        .each(function() {
            Openid.push(new Document(rdf
                .where("Openid a foaf:Openid")
                .filter("authority", this.Openid.value.authority))); 
        });
    this.Openid = Openid;
    
    var Personalmailbox = new Array();
    queryObject(rdf, "?Agent", "foaf:Personalmailbox", "?Personalmailbox")
        .each(function() {
            Personalmailbox.push(new org.ontoware.rdfreactor.schema.owl.Thing(rdf
                .where("Personalmailbox a foaf:Personalmailbox")
                .filter("authority", this.Personalmailbox.value.authority))); 
        });
    this.Personalmailbox = Personalmailbox;
    
    var Sha1sumofapersonalmailboxURIname = new Array();
    queryObject(rdf, "?Agent", "foaf:Sha1sumofapersonalmailboxURIname", "?Sha1sumofapersonalmailboxURIname")
        .each(function() {
            Sha1sumofapersonalmailboxURIname.push(new String(rdf
                .where("Sha1sumofapersonalmailboxURIname a foaf:Sha1sumofapersonalmailboxURIname")
                .filter("authority", this.Sha1sumofapersonalmailboxURIname.value.authority))); 
        });
    this.Sha1sumofapersonalmailboxURIname = Sha1sumofapersonalmailboxURIname;
    
    var SkypeID = new Array();
    queryObject(rdf, "?Agent", "foaf:SkypeID", "?SkypeID")
        .each(function() {
            SkypeID.push(new String(rdf
                .where("SkypeID a foaf:SkypeID")
                .filter("authority", this.SkypeID.value.authority))); 
        });
    this.SkypeID = SkypeID;
    
    var Status = new Array();
    queryObject(rdf, "?Agent", "foaf:Status", "?Status")
        .each(function() {
            Status.push(new String(rdf
                .where("Status a foaf:Status")
                .filter("authority", this.Status.value.authority))); 
        });
    this.Status = Status;
    
    var Tipjar = new Array();
    queryObject(rdf, "?Agent", "foaf:Tipjar", "?Tipjar")
        .each(function() {
            Tipjar.push(new Document(rdf
                .where("Tipjar a foaf:Tipjar")
                .filter("authority", this.Tipjar.value.authority))); 
        });
    this.Tipjar = Tipjar;
    
    var Topicinterest = new Array();
    queryObject(rdf, "?Agent", "foaf:Topicinterest", "?Topicinterest")
        .each(function() {
            Topicinterest.push(new org.ontoware.rdfreactor.schema.owl.Thing(rdf
                .where("Topicinterest a foaf:Topicinterest")
                .filter("authority", this.Topicinterest.value.authority))); 
        });
    this.Topicinterest = Topicinterest;
    
    var Weblog = new Array();
    queryObject(rdf, "?Agent", "foaf:Weblog", "?Weblog")
        .each(function() {
            Weblog.push(new Document(rdf
                .where("Weblog a foaf:Weblog")
                .filter("authority", this.Weblog.value.authority))); 
        });
    this.Weblog = Weblog;
    
    var YahoochatID = new Array();
    queryObject(rdf, "?Agent", "foaf:YahoochatID", "?YahoochatID")
        .each(function() {
            YahoochatID.push(new String(rdf
                .where("YahoochatID a foaf:YahoochatID")
                .filter("authority", this.YahoochatID.value.authority))); 
        });
    this.YahoochatID = YahoochatID;
    
    var comment = new Array();
    queryObject(rdf, "?Agent", "foaf:comment", "?comment")
        .each(function() {
            comment.push(new String(rdf
                .where("comment a foaf:comment")
                .filter("authority", this.comment.value.authority))); 
        });
    this.comment = comment;
    
    var label = new Array();
    queryObject(rdf, "?Agent", "foaf:label", "?label")
        .each(function() {
            label.push(new String(rdf
                .where("label a foaf:label")
                .filter("authority", this.label.value.authority))); 
        });
    this.label = label;
    
    var member = new Array();
    queryObject(rdf, "?Agent", "foaf:member", "?member")
        .each(function() {
            member.push(new String(rdf
                .where("member a foaf:member")
                .filter("authority", this.member.value.authority))); 
        });
    this.member = member;
    
    var type = new Array();
    queryObject(rdf, "?Agent", "foaf:type", "?type")
        .each(function() {
            type.push(new String(rdf
                .where("type a foaf:type")
                .filter("authority", this.type.value.authority))); 
        });
    this.type = type;
    

    this.equals = function(o) {
        if(!(o instanceof Agent)) {
            return false;
        }
        if(Thing.prototype.equals.call(this)) {
            return false;
        }
        if(this.comment.length == o.comment.length)
            for(var i = 0; i < this.comment.length; i++) {
                if(!this.comment.equals(o.comment)) {
                    return false;
                }
            }
        }
        if(this.label.length == o.label.length)
            for(var i = 0; i < this.label.length; i++) {
                if(!this.label.equals(o.label)) {
                    return false;
                }
            }
        }
        if(this.member.length == o.member.length)
            for(var i = 0; i < this.member.length; i++) {
                if(!this.member.equals(o.member)) {
                    return false;
                }
            }
        }
        if(this.type.length == o.type.length)
            for(var i = 0; i < this.type.length; i++) {
                if(!this.type.equals(o.type)) {
                    return false;
                }
            }
        }
        return true;
    }
    
}
Agent.prototype = new Thing();
